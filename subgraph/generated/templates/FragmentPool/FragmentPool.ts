// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Borrow extends ethereum.Event {
  get params(): Borrow__Params {
    return new Borrow__Params(this);
  }
}

export class Borrow__Params {
  _event: Borrow;

  constructor(event: Borrow) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get supply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Repay extends ethereum.Event {
  get params(): Repay__Params {
    return new Repay__Params(this);
  }
}

export class Repay__Params {
  _event: Repay;

  constructor(event: Repay) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get onBelhalfOf(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get interest(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get supply(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Trade extends ethereum.Event {
  get params(): Trade__Params {
    return new Trade__Params(this);
  }
}

export class Trade__Params {
  _event: Trade;

  constructor(event: Trade) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isBuy(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get fragmentAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get protocolPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get creatorPrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get supply(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class FragmentPool__getConfigResultValue0Struct extends ethereum.Tuple {
  get userId(): BigInt {
    return this[0].toBigInt();
  }

  get lensId(): BigInt {
    return this[1].toBigInt();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get underlyingAsset(): Address {
    return this[3].toAddress();
  }

  get manager(): Address {
    return this[4].toAddress();
  }

  get token(): Address {
    return this[5].toAddress();
  }

  get debToken(): Address {
    return this[6].toAddress();
  }

  get pricing(): Address {
    return this[7].toAddress();
  }

  get factory(): Address {
    return this[8].toAddress();
  }

  get market(): i32 {
    return this[9].toI32();
  }
}

export class FragmentPool extends ethereum.SmartContract {
  static bind(address: Address): FragmentPool {
    return new FragmentPool("FragmentPool", address);
  }

  getConfig(): FragmentPool__getConfigResultValue0Struct {
    let result = super.call(
      "getConfig",
      "getConfig():((uint256,uint256,address,address,address,address,address,address,address,uint8))",
      []
    );

    return changetype<FragmentPool__getConfigResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getConfig(): ethereum.CallResult<
    FragmentPool__getConfigResultValue0Struct
  > {
    let result = super.tryCall(
      "getConfig",
      "getConfig():((uint256,uint256,address,address,address,address,address,address,address,uint8))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FragmentPool__getConfigResultValue0Struct>(value[0].toTuple())
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class BuyFragmentCall extends ethereum.Call {
  get inputs(): BuyFragmentCall__Inputs {
    return new BuyFragmentCall__Inputs(this);
  }

  get outputs(): BuyFragmentCall__Outputs {
    return new BuyFragmentCall__Outputs(this);
  }
}

export class BuyFragmentCall__Inputs {
  _call: BuyFragmentCall;

  constructor(call: BuyFragmentCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyFragmentCall__Outputs {
  _call: BuyFragmentCall;

  constructor(call: BuyFragmentCall) {
    this._call = call;
  }
}

export class DisableCreatorCall extends ethereum.Call {
  get inputs(): DisableCreatorCall__Inputs {
    return new DisableCreatorCall__Inputs(this);
  }

  get outputs(): DisableCreatorCall__Outputs {
    return new DisableCreatorCall__Outputs(this);
  }
}

export class DisableCreatorCall__Inputs {
  _call: DisableCreatorCall;

  constructor(call: DisableCreatorCall) {
    this._call = call;
  }
}

export class DisableCreatorCall__Outputs {
  _call: DisableCreatorCall;

  constructor(call: DisableCreatorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get config(): InitializeCallConfigStruct {
    return changetype<InitializeCallConfigStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallConfigStruct extends ethereum.Tuple {
  get userId(): BigInt {
    return this[0].toBigInt();
  }

  get lensId(): BigInt {
    return this[1].toBigInt();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get underlyingAsset(): Address {
    return this[3].toAddress();
  }

  get manager(): Address {
    return this[4].toAddress();
  }

  get token(): Address {
    return this[5].toAddress();
  }

  get debToken(): Address {
    return this[6].toAddress();
  }

  get pricing(): Address {
    return this[7].toAddress();
  }

  get factory(): Address {
    return this[8].toAddress();
  }

  get market(): i32 {
    return this[9].toI32();
  }
}

export class RebalanceTokensCall extends ethereum.Call {
  get inputs(): RebalanceTokensCall__Inputs {
    return new RebalanceTokensCall__Inputs(this);
  }

  get outputs(): RebalanceTokensCall__Outputs {
    return new RebalanceTokensCall__Outputs(this);
  }
}

export class RebalanceTokensCall__Inputs {
  _call: RebalanceTokensCall;

  constructor(call: RebalanceTokensCall) {
    this._call = call;
  }
}

export class RebalanceTokensCall__Outputs {
  _call: RebalanceTokensCall;

  constructor(call: RebalanceTokensCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class SellFragmentCall extends ethereum.Call {
  get inputs(): SellFragmentCall__Inputs {
    return new SellFragmentCall__Inputs(this);
  }

  get outputs(): SellFragmentCall__Outputs {
    return new SellFragmentCall__Outputs(this);
  }
}

export class SellFragmentCall__Inputs {
  _call: SellFragmentCall;

  constructor(call: SellFragmentCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SellFragmentCall__Outputs {
  _call: SellFragmentCall;

  constructor(call: SellFragmentCall) {
    this._call = call;
  }
}
